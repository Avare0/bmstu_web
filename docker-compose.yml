version: '3'
services:
  db:
    container_name: postgres
    restart: always
    image: postgres:latest
    build:
      context: docker/postgres
    volumes:
      - ./docker/postgres/data/:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1576
      POSTGRES_DATABASE: airbnb
    expose:
      - 5432
    ports:
      - 5432:5432
  nginx:
    image: nginx
    container_name: nginx
    restart: unless-stopped
    build:
      context: docker/nginx
    volumes:
      - ./api/:/api/
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api1
      - api2
  api1:
    container_name: api1
    image: backend:latest
    build:
      context: docker/api
    env_file:
      - ./docker/api/.env
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./api/:/api/
    depends_on:
      - db
    ports:
      - 8000:8000
  api2:
    container_name: api2
    image: backend:latest
    build:
      context: docker/api
    env_file:
      - ./docker/api/.env
    command: python manage.py runserver 0.0.0.0:8001
    volumes:
      - ./api/:/api/
    depends_on:
      - db
  api3:
    container_name: api3
    image: backend:latest
    build:
      context: docker/api
    env_file:
      - ./docker/api/.env
    command: python manage.py runserver 0.0.0.0:8002
    volumes:
      - ./api/:/api/
    depends_on:
      - db
#  web:
#    container_name: django
#    image: django:latest
#    build:
#      context: docker/django
#    command: python manage.py makemigrations & python manage.py migrate & python manage.py runserver 0.0.0.0:8000
#    volumes:
#      - ./db_cw/:/django/
#    ports:
#      - 8000:8000
#    depends_on:
#      - db